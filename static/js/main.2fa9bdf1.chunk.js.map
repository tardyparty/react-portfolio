{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","className","href","target","icon","faLinkedin","size","faGithubSquare","faSmile","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2fa9bdf1.chunk.js","sourcesContent":["import React from 'react';\nimport './app.css';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSmile } from \"@fortawesome/free-solid-svg-icons\";\nimport { faLinkedin, faGithubSquare } from \"@fortawesome/free-brands-svg-icons\";\n\n\nfunction App() {\n    return (\n      <div className=\"App\">\n        <div className=\"sidebar\">\n          <div className=\"icons\">\n            <div className=\"linkicon\">\n              <div className=\"iconpair text-center\">\n                <a href=\"https://www.linkedin.com/in/davidtardy/\"\n                      target=\"_blank\">\n                  <FontAwesomeIcon icon={faLinkedin} size=\"3x\"/>\n                </a>\n              </div>\n              <div className=\"iconpair text-center\">\n                <a href=\"https://www.linkedin.com/in/davidtardy/\"\n                      target=\"_blank\">\n                  <h3> linkedin </h3>\n                </a>\n              </div>\n            </div>\n              <div className=\"linkicon\">\n              <div className=\"iconpair text-center\">\n                <a href=\"https://github.com/tardyparty\"\n                  target=\"_blank\">\n                  <FontAwesomeIcon icon={faGithubSquare} size=\"3x\"/>\n                </a>\n              </div>\n              <div className=\"iconpair text-center\">\n                <a href=\"https://github.com/tardyparty\"\n                  target=\"_blank\">\n                  <h3> github </h3>\n                </a>\n              </div>\n            </div>\n            <div className=\"linkicon\">\n              <div className=\"iconpair text-center\">\n                <a href=\"https://gdoc.pub/doc/1VcD9YALwryRVHumeN0URlVQ1MKuuWwN3CFqE-Bg5VeM#?usp=sharing\"\n                  target=\"_blank\">\n                  <FontAwesomeIcon icon={faSmile} size=\"3x\"/>\n                </a>\n              </div>\n              <div className=\"iconpair text-center\">\n                <a href=\"https://gdoc.pub/doc/1VcD9YALwryRVHumeN0URlVQ1MKuuWwN3CFqE-Bg5VeM#?usp=sharing\"\n                  target=\"_blank\">\n                  <h3> resume </h3>\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"main\">\n          <div className=\"projectdiv\">\n            <div className=\"projectsTitle text-center\">Projects</div>\n            <div className=\"project\">\n              Book Club\n              <div className=\"projectLinks\">\n                <a href=\"\" target=\"_blank\" className=\"linkClass\">\n                  <p><em className=\"yellow\">{\"{ \"}</em><em className=\"blue\">project</em><em className=\"yellow\">{\" }\"}</em></p>\n                </a>\n                <a href=\"https://github.com/tardyparty/bookClubApp\" \n                  target=\"_blank\"\n                  className=\"linkClass\">\n                  <p><em className=\"yellow\">{\"{ \"}</em><em className=\"green\">github</em><em className=\"yellow\">{\" }\"}</em></p>\n                </a>\n              </div>\n            </div>\n            <div className=\"project\">\n              Happy Camper\n            </div>\n            <div className=\"project\">\n              Clicky Game\n            </div>\n            <div className=\"project\">\n              MedSched\n            </div>\n          </div>\n        </div>\n        <div className=\"bio\">\n          <div className=\"bioFunction\">\n            <p className=\"name\">David Tardy</p>\n            <p>\n              <em className=\"blue title\">fullstack</em>.<em className=\"green title\">developer</em>\n              <em className=\"pink title\">()</em> <em className=\"yellow title\"> {\"{\"} </em> <br></br>\n              &emsp;focused on developing new <br></br>\n              &emsp;skills in challenging environments. <br></br>\n              <em className=\"yellow title\"> {\"}\"} </em> ;\n            </p>\n            <p>\n              <em className=\"pink\"> class </em> <em className=\"blue\"> TechnicalSkills </em>\n              = <em className=\"green\"> function</em> <em className=\"pink\">() </em> \n              <em className=\"yellow\">{\"{\"}</em> <br></br>\n              &emsp;<em className=\"green\">return </em> <em className=\"pink\">(</em><br></br>\n              &emsp;&emsp;<em className=\"orange\">languages</em> : <em className=\"purple\"> [ </em><br></br>\n              &emsp;&emsp;&emsp;Javascript, <br></br>\n              &emsp;&emsp;&emsp;HTML / CSS, <br></br>\n              &emsp;&emsp;&emsp;Python <br></br>\n              &emsp;&emsp;<em className=\"purple\">]</em> , <br></br>\n              &emsp;&emsp;<em className=\"orange\">frameworks</em> : <em className=\"purple\"> [ </em><br></br>\n              &emsp;&emsp;&emsp;React, <br></br>\n              &emsp;&emsp;&emsp;Node, <br></br>\n              &emsp;&emsp;&emsp;Express, <br></br>\n              &emsp;&emsp;&emsp;Mongoose <br></br>\n              &emsp;&emsp;<em className=\"purple\">]</em> , <br></br>\n              &emsp;&emsp;<em className=\"orange\">databases</em> : <em className=\"purple\"> [ </em><br></br>\n              &emsp;&emsp;&emsp;MongoDB, <br></br>\n              &emsp;&emsp;&emsp;MySQL <br></br>\n              &emsp;&emsp;<em className=\"purple\">]</em><br></br>\n              &emsp;<em className=\"purple\">)</em><br></br>\n              <em className=\"yellow\">{\"}\"}</em>;\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport '../node_modules/font-awesome/css/font-awesome.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}